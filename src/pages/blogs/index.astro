---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import Blog from "../../components/jsx/Blog"
const blogCards = await getCollection("blogCards");
const blogData = await getCollection("blog");



const allCategories = await Astro.glob("../../content/categories/*.md")
const blogPageData = blogCards?.map((ele) =>{
  return{
    category: allCategories?.find((category) => category.file?.includes(ele?.data?.categories)).frontmatter.categoryName,
    data:ele
  }
})

---

<script src="https://web3forms.com/client/script.js" async defer></script>

<Layout title="Resume07 | Blogs">
  <div
      id="toast-container"
      class="fixed right-0 top-0 max-w-400px z-1000 p-10">
      <div
        id="toast"
        class="hidden bg-[#1E1E21] font-sans text-pink-500  mb-[10px] font-bold text-xl rounded-md px-4 py-4 z-10000">
      </div>
    </div>
  <Blog blogPageData={blogPageData} data={blogData[0]?.data} client:load/>
</Layout>


<script>
  function showToast(message: string): void {
    const toastElement: HTMLElement | null = document.getElementById("toast");

    if (toastElement) {
      // Update the content of the toast
      toastElement.innerHTML = message;
      toastElement.classList.remove("hidden");

      // Automatically remove the toast after a delay
      setTimeout(() => {
        // Clear the content and remove the styling class
        toastElement.innerHTML = "";
        toastElement.classList.add("hidden");
      }, 3000); // Adjust the delay as needed
    } else {
      console.error("Toast element not found");
    }
  }

  document.addEventListener("DOMContentLoaded", function () {
    const form: HTMLFormElement | null = document.getElementById(
      "contact"
    ) as HTMLFormElement;

    const handleFormSubmission = async (event: Event): Promise<void> => {
      // prevent page from reloading
      event.preventDefault();
      try {
        await fetch("https://api.web3forms.com/submit", {
          method: "POST",
          body: new FormData(event.target as HTMLFormElement),
          mode: "no-cors",
        });
        form.reset();
        setTimeout(() => {
          // Show a success toast message
          showToast("Form submitted");
        }, 3000);
      } catch (error) {
        console.error("Error on submit:", error);
      }
    };

    // add the submission event listener
    if (form) {
      form.addEventListener("submit", handleFormSubmission, true);
    }
  });
</script>

<style>
  #toast {
    transform: translateY(10px);
    transition:
      opacity 0.5s ease-in-out,
      transform 1s ease-in-out;
  }

  #toast:not(.hidden) {
    opacity: 1;
  }
</style>