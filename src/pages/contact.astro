---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
const contactData = await getCollection("contact");

---

<script src="https://web3forms.com/client/script.js" async defer></script>



<Layout title="Resume07 | Contact">
  <div
      id="toast-container"
      class="fixed right-0 top-0 max-w-400px z-1000 p-10">
      <div
        id="toast"
        class="hidden bg-[#1E1E21] font-sans text-pink-500  mb-[10px] font-bold text-xl rounded-md px-4 py-4 z-10000">
      </div>
    </div>
  <div class="my-auto p-3 md:p-6 lg:p-12">
    <div class="items-start lg:flex">
      <div
        class="md:transition-all md:duration-1000 prose prose-invert basis-1/3 lg:mr-14"
      >
        <div class="-mx-3 -mt-3 md:m-0">
          <div
            class="bg-gradient-to-b from-omega-800 to-omega-800 p-6 pb-2 md:bg-none md:p-0"
          >
            <h3 class="!mt-0">{contactData[0]?.data?.text1}</h3><h3>
              <em
                class="bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 text-transparent bg-clip-text leading-none"
                >{contactData[0]?.data?.text2}</em
              >
            </h3>
          </div><div
            class="h-px w-full bg-gradient-to-r from-accent via-beta to-alpha md:bg-none"
          >
          </div>
        </div><p>
          {contactData[0]?.data?.text3}
        </p><p>{contactData[0]?.data?.text4}</p><div
          class="my-6 md:my-12"
        >
        </div><small>
          {contactData[0]?.data?.socialLinks?.map((ele) =>{
            return(
              <a href={ele?.url} class="no-underline" target="_blank">                
            <p class="flex !mt-0">
            <img src={ele?.icon} alt="icon" width="30" class="!m-0 !mr-3" />
              {ele?.text}:&nbsp;<span class="border-b border-[#EE4672]">{ele?.value}</span>
          </p>
        </a>
            )
          })}          
          </small
        >
      </div><div
        class="md:transition-all md:duration-1000 md:with-back-plate max-w-3xl border border-omega-700 md:before:bg-omega-700 relative mb-2 -translate-x-2 md:mb-2 md:-translate-x-2
        before:absolute before:right-0 before:bottom-0 before:h-full before:w-full before:translate-y-2 before:translate-x-2 before:md:bg-white before:md:translate-y-2 before:md:translate-x-2"
      >
        <form method="POST" id="contact">
          <div class="relative overflow-hidden shadow">
            <div class="bg-[#18181B]">
              <fieldset class="border-b border-dashed border-omega-700">
                <div class="bg-omega-800 p-5">
                  <legend class="m-0 p-0 text-[#d1d5db]"
                    >Your contact information</legend
                  >
                </div>
                <div class="grid gap-2 p-5 md:grid-cols-3">
                  <div class="flex items-center">
                    <input type="hidden" name="access_key" value="1ea9e9ba-0fc0-48fd-8a85-5f4f2137bf7c">
                    <input
                      type="text"
                      name="first-name"
                      autocomplete="given-name"
                      class="block text-white w-full border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="First name"
                      required=""
                    />
                  </div><div class="flex items-center">
                    <input
                      type="text"
                      name="last-name"
                      autocomplete="family-name"
                      class="block w-full text-white border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="Last name"
                      required=""
                    />
                  </div><div class="flex items-center">
                    <input
                      type="email"
                      name="email"
                      autocomplete="email"
                      class="block w-full text-white border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="Email address"
                      required=""
                    />
                  </div><div class="flex items-center">
                    <input
                      type="text"
                      name="company"
                      autocomplete="company"
                      class="block w-full text-white border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="Company Name"
                    />
                  </div><div class="flex items-center">
                    <input
                      type="text"
                      name="phone"
                      autocomplete="phone"
                      class="block text-white w-full border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="Phone Number"
                    />
                  </div>
                  <div class="flex items-center">
                    <input
                      type="text"
                      name="country"
                      autocomplete="country"
                      class="block text-white w-full border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="Country"
                      required=""
                    />
                  </div>
                </div>
              </fieldset>
              
              <fieldset
                class="border-b border-dashed border-omega-700"
              >
                <div class="bg-omega-800 p-5">
                  <legend class="m-0 p-0 text-[#d1d5db]"
                    >Tell me about your project</legend
                  >
                </div><div class="grid gap-2 p-5">
                  <div class="flex items-center">
                    <textarea                      
                      name="message"
                      class="block  text-white w-full border-0 py-3 px-4 border-b bg-omega-700/20 placeholder-omega-400 border-accent focus:ring-accent-500"
                      placeholder="Project description"
                      rows="3"></textarea>
                  </div>
                </div>
              </fieldset>
            </div><div class="bg-omega-900 px-4 pt-6 pb-8 text-left md:px-8">
              <button
                class="relative inline-flex items-center justify-center leading-normal no-underline group cursor-pointer select-none focus:outline-none peer md:peer-even:ml-6 w-full sm:w-1/3"
                type="submit"
                ><div
                  class="z-10 h-full w-full border-4 border-transparent group-active:border-alpha flex transform-gpu transition-transform not-prose font-mono py-3 px-6 text-sm hover:translate-x-2 hover:translate-y-2 bg-white text-black"
                >
                  <span class="mx-auto">Submit</span>
                </div><div
                  class="absolute h-full w-full bg-gradient-to-r from-alpha via-alpha-300 to-beta top-2 left-2"
                >
                </div></button
              >
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</Layout>
<script>
  function showToast(message: string): void {
    const toastElement: HTMLElement | null = document.getElementById("toast");

    if (toastElement) {
      // Update the content of the toast
      toastElement.innerHTML = message;
      toastElement.classList.remove("hidden");

      // Automatically remove the toast after a delay
      setTimeout(() => {
        // Clear the content and remove the styling class
        toastElement.innerHTML = "";
        toastElement.classList.add("hidden");
      }, 3000); // Adjust the delay as needed
    } else {
      console.error("Toast element not found");
    }
  }

  document.addEventListener("DOMContentLoaded", function () {
    const form: HTMLFormElement | null = document.getElementById(
      "contact"
    ) as HTMLFormElement;

    const handleFormSubmission = async (event: Event): Promise<void> => {
      // prevent page from reloading
      event.preventDefault();
      try {
        await fetch("https://api.web3forms.com/submit", {
          method: "POST",
          body: new FormData(event.target as HTMLFormElement),
          mode: "no-cors",
        });
        form.reset();
        setTimeout(() => {
          // Show a success toast message
          showToast("Form submitted");
        }, 3000);
      } catch (error) {
        console.error("Error on submit:", error);
      }
    };

    // add the submission event listener
    if (form) {
      form.addEventListener("submit", handleFormSubmission, true);
    }
  });
</script>

<style>
  #toast {
    transform: translateY(10px);
    transition:
      opacity 0.5s ease-in-out,
      transform 1s ease-in-out;
  }

  #toast:not(.hidden) {
    opacity: 1;
  }
</style>