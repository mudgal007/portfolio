---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
const indexData = await getCollection("personalInfo");
const aboutData = await getCollection("about");
const education = await getCollection("eduction");
const employment = await getCollection("employment");
---

<Layout title="Resume07 | About">
  <div class="mx-auto w-full">
    <div class="md:flex">
      <div
        class="relative flex h-screen basis-1/3 flex-col justify-between pb-24 md:h-auto md:items-center md:py-12 prose prose-invert"
      >
        <div
          class="not-prose absolute top-0 left-0 h-full w-full bg-omega-900 grayscale"
        >
          <div class="relative overflow-hidden h-full w-full">
            <div
              class="absolute left-0 top-0 z-10 hidden h-full w-[120%] bg-omega-900 origin-bottom skew-x-6 transform-gpu transition-transform duration-700"
            >
            </div><img
              alt="my image"
              sizes="100vw"
              src={indexData[0]?.data?.heroImage}
              decoding="async"
              data-nimg="fill"
              class="md:transform-gpu md:transition-all md:duration-700 object-cover"
              style="position: absolute; height: 100%; width: 100%; inset: 0px; color: transparent;"
            />
          </div><div
            class="absolute top-0 left-0 z-20 h-full w-full bg-gradient-to-b from-transparent via-transparent to-black/90"
          >
          </div>
        </div>
        <div class="z-10 bg-black p-6 text-center">
          <h3 class="inline uppercase !mt-0 !mb-0">{indexData[0].data.name}</h3>
        </div><div class="z-10 p-6 text-center md:p-8">
          <h2>{aboutData[0]?.data?.text2}</h2>
          <p>
            {aboutData[0]?.data?.text3}
          </p>
          <a
            class="relative inline-flex items-center justify-center leading-normal no-underline group cursor-pointer select-none focus:outline-none peer md:peer-even:ml-6"
            href="/contact"
            ><div
              class="z-10 h-full w-full border-4 border-transparent group-active:border-alpha flex transform-gpu transition-transform not-prose font-mono py-4 px-8 text-base hover:translate-x-2 hover:translate-y-2 bg-white text-black"
            >
              <span class="mx-auto"><p>Get a Free Price Quote</p></span>
            </div><div
              class="absolute h-full w-full bg-gradient-to-r from-alpha via-alpha-300 to-beta top-2 left-2"
            >
            </div></a
          >
        </div>
      </div><div class="basis-2/3">
        <div class="p-6 md:p-12 prose prose-invert">
          <h3 class="mb-2">{aboutData[0]?.data?.text1}</h3>
          <h3 class="inline">
            <div class="m-0 inline-flex items-baseline font-mono">
              <svg
                stroke="currentColor"
                fill="currentColor"
                stroke-width="0"
                viewBox="0 0 512 512"
                class="hidden shrink-0 grow-0 self-center text-omega-500 md:block"
                height="1em"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
                ><path
                  fill="none"
                  stroke-linecap="square"
                  stroke-miterlimit="10"
                  stroke-width="48"
                  d="M184 112l144 144-144 144"></path></svg
              ><span
                class="animate-typewriter overflow-hidden whitespace-nowrap text-gradient-500 leading-none bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 text-transparent bg-clip-text !text-[2rem] !md:text-[2.25rem]"
                >{aboutData[0]?.data?.text4}</span
              ><div class="ml-2 -translate-y-2 animate-blink">_</div>
            </div>
          </h3>
        </div>
        <div
          class="grid grid-cols-1 items-start divide-y divide-omega-700 shadow-xl"
        >
          <div class="bg-gradient-omega-900 p-6 md:px-12 md:py-8">
            <p
              class="col-span-3 mt-0 mb-6 self-center border-l-2 border-[#EF4551] pl-3 text-white"
            >
              {aboutData[0]?.data?.skillsTitle1}
            </p>
            <div
              class="grid grid-cols-fluid gap-y-3 gap-x-8 [--tw-fluid-col-min:12rem] prose prose-invert !max-w-none"
            >
            {aboutData[0]?.data?.skill1?.map((ele) =>{              
              return(
              <div class="md:transition-all md:duration-1000">
                <div class="flex items-center">
                  <img class="mr-3 h-7 w-7 fill-current text-omega-500 m-0" src={ele?.image} alt="tech" />                  
                    <small class="font-bold">{ele?.name}</small><div
                    class="ml-auto space-x-px"
                  >                  
                  {Array.from({length:5}).map((e,i) =>{
                    return(<span class={`inline-block h-3.5 w-3.5 ${i >= ele?.rate ? "bg-omega-700" : "bg-gradient-to-tr from-accent-700 to-accent"}  `}
                    ></span>)                    
                  })}                    
                  </div>
                </div>
              </div>  
              )
            })}
              
            </div>
          </div>
          <div class="bg-gradient-omega-900 p-6 md:px-12 md:py-8">
            <p
              class="col-span-3 mt-0 mb-6 self-center border-l-2 border-[#EF4551] pl-3 text-white"
            >
              {aboutData[0]?.data?.skillsTitle2}
            </p>
            <div
              class="grid grid-cols-fluid gap-y-3 gap-x-8 [--tw-fluid-col-min:12rem] prose prose-invert !max-w-none"
            >
            {aboutData[0]?.data?.skill2?.map((ele) =>{              
              return(
              <div class="md:transition-all md:duration-1000">
                <div class="flex items-center">
                  <img class="mr-3 h-7 w-7 fill-current text-omega-500 m-0" src={ele?.image} alt="tech" />                  
                    <small class="font-bold">{ele?.name}</small><div
                    class="ml-auto space-x-px"
                  >                  
                  {Array.from({length:5}).map((e,i) =>{
                    return(<span class={`inline-block h-3.5 w-3.5 ${i >= ele?.rate ? "bg-omega-700" : "bg-gradient-to-tr from-accent-700 to-accent"}  `}
                    ></span>)                    
                  })}                    
                  </div>
                </div>
              </div>  
              )
            })}
              
            </div>
          </div>
        </div><div
          class="md:transition-all md:duration-1000 md:translate-y-5 prose p-6 dark:prose-invert md:p-12"
        >
        {aboutData[0]?.data?.description?.map((ele) =>{
          return(
          <div class="wrapper-about">
          <div class="text-white text-[1.25rem] md:text-[1.5rem] font-bold"><span class="text-[#9CA3AF]">0{ele?.number}.</span> {ele?.title}</div><p>
            {ele?.text}
          </p>
        </div>
          )
        })}
        
         
        </div>
      </div>
    </div><div class="flex-wrap justify-between bg-white p-6 md:flex">
      <div class="flex-1 md:p-12 prose">
        <h3>{aboutData[0]?.data?.text5}</h3><div
          class="h-1.5 bg-gradient-to-r from-black via-beta to-alpha"
        >
        </div>
        <div class="mt-6 flex flex-col md:mt-12">
          {employment?.map((ele) => ele?.data)?.map((e) =>{
            return(
              <div class="wrap-about">
            <div class="flex">
              <div>
                <div class="pr-1  mt-0 !mb-[0.25em] !md:mb-[1.25em] font-bold">{e?.company}</div><div>
                  {e?.title}
                </div>
              </div><small class="ml-auto shrink-0 ">{e?.date}
                </small>
            </div><hr class="my-6" />
          </div>
          )
          })}
          
        </div>
      </div><div class="flex-1 md:p-12 prose">
        <h3>{aboutData[0]?.data?.text6}</h3><div
          class="h-1.5 bg-gradient-to-r from-black via-beta to-alpha"
        >
        </div><div class="mt-6 flex flex-col md:mt-12">
          {education?.map((ele) => ele?.data)?.map((e) =>{
            return(
              <div class="wrap-about">
            <div class="flex">
              <div>
                <div class="pr-1  mt-0 !mb-[0.25em] !md:mb-[1.25em] font-bold">{e?.university}</div><div>
                  {e?.course}
                </div>
              </div><small class="ml-auto shrink-0">{e?.date}
                </small>
            </div><hr class="my-6" />
          </div>
          )
          })}
        </div>
      </div>
    </div>
  </div>
</Layout>
