---
const {indexData} = Astro.props;
---
<div class="mx-auto my-auto py-4 md:p-10 lg:p-20">
    <div
      class="absolute right-0 top-0 bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 hidden md:block"
      style=" height: 100%; width: 25%; padding-left: 1.25rem;"
    >
    </div>
    <div class="items-end text-center md:flex md:text-left">
      <div class="relative shrink-0 basis-1/2 text-center md:order-2 md:ml-4">
        <div class="hidden md:block">
          <div class="relative overflow-hidden">
            <div
              class="absolute left-0 top-0 z-10 hidden h-full w-[120%] bg-omega-900 origin-bottom skew-x-6 transform-gpu transition-transform duration-700"
            >
            </div><img
              alt="my photo"
              src={indexData[0].data.heroImage}
              width="481"
              height="519"
              decoding="async"
              data-nimg="1"
              class="md:transform-gpu md:transition-all md:duration-700"
              style="color: transparent;"
            />
          </div>
        </div><div class="md:hidden">
          <div class="relative overflow-hidden">
            <div
              class="absolute left-0 top-0 z-10 hidden h-full w-[120%] bg-omega-900 origin-bottom skew-x-6 transform-gpu transition-transform duration-700"
            >
            </div><img
              alt="my photo"
              src={indexData[0].data.heroImageMobile}
              width="200"
              height="200"
              decoding="async"
              data-nimg="1"
              class="md:transform-gpu md:transition-all md:duration-700 mx-auto"
              style="color: transparent;"
            />
          </div>
        </div>
      </div><div class="z-10 mt-6 basis-full md:mb-12 md:mt-0">
        <div
          class="md:transition-all md:duration-1000 prose prose-invert prose-headings:my-4 first-of-type:prose-headings:mt-0 prose-p:hidden prose-headings:my-6 prose-pre:max-w-[100vw] md:prose-p:block md:prose-pre:max-w-lg"
        >
          <h1>
            <div class="m-0 inline-flex items-baseline font-mono">
              <svg
                stroke="#71717A"
                fill="currentColor"
                stroke-width="0"
                viewBox="0 0 512 512"
                class="hidden shrink-0 grow-0 self-center text-omega-500 md:block"
                height="1em"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
                ><path
                  fill="none"
                  stroke-linecap="square"
                  stroke-miterlimit="10"
                  stroke-width="48"
                  d="M184 112l144 144-144 144"></path></svg
              ><span
                class="animate-typewriter overflow-hidden whitespace-nowrap text-[2.5rem] md:text-[4rem]"
                >{indexData[0].data.name}</span
              ><div class="ml-2 -translate-y-2 animate-blink text-[2.5rem] md:text-[4rem]">_</div>
            </div>
          </h1><h1
            class="bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 text-transparent bg-clip-text text-[2.25rem] md:text-[3.75rem]"
          >
          <em>{indexData[0].data.title1}</em>
          <span class="bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 text-transparent bg-clip-text text-[2.25rem] md:text-[3.75rem]">&amp;</span>
          <em>{indexData[0].data.title2}</em>
          </h1><p>
            {indexData[0].data.description}
          </p>
        </div>
      </div>
    </div>
    <div class="relative z-10">
      <div
        class="h-px w-full bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 hidden md:block"
      >
      </div><div
        class="bg-[#18181B] flex flex-wrap items-center justify-between px-4 md:p-8 md:shadow-xl"
      >
        <div
          class="prose prose-invert grow grid-cols-2 gap-2 sm:grid md:gap-6 md:pr-6"
        >
        {indexData[0]?.data?.achievements?.map((ele, index) =>{
          return(
          <div class="flex flex-col items-center justify-center md:flex-row mb-2 mt-2 md:mb-0 md:mt-0">
            <h2 class="m-0 text-white md:pr-4 !text-[2rem] !md:text-[3rem] leading-none">
              {ele?.number}
            </h2><div class="dark:text-accent-400 !text-[#287FFB]">
              {ele?.text}
            </div>
          </div>
          )
        } )}          
        </div><div class="prose prose-invert grow text-center mt-3 md:mt-0">
          <a
            class="relative inline-flex items-center justify-center leading-normal no-underline group cursor-pointer select-none focus:outline-none peer md:peer-even:ml-6"
            href={indexData[0]?.data?.resume}
            download
            ><div
              class="z-10 h-full w-full border-4 border-transparent group-active:border-alpha flex transform-gpu transition-transform not-prose font-mono py-5 px-10 text-lg hover:translate-x-2 hover:translate-y-2 bg-white text-black"
            >
              <span class="mx-auto"><p class="text-[1rem] md:text-[1.125rem]">Download Resume</p></span>
            </div><div
              class="absolute h-full w-full bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 top-2 left-2"
            >
            </div></a
          ><p>
            <a
              class="border-b border-[#EC478A] hover:border-b-2 no-underline"
              href="/contact">Get in Touch</a
            >
          </p>
        </div>
      </div>
      <div class="mt-6 mt-12 hidden w-3/4 px-2 pr-12 md:block">
        <div class="flex h-12 flex-wrap items-center justify-between">
          {indexData[0]?.data?.clientsLogo?.map((ele) =>{
            return(
            <div class="md:transition-all md:duration-1000">
              <img
                  src={ele?.src}
                  alt={ele?.alt}
                  class="h-12 w-36 fill-current text-omega-500"
                />
          </div>
            )
          })}
        </div>
      </div>
    </div>
  </div>
